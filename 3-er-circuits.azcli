#Parameters
region=eastus
rg=lab-svh-skytap # set your Resource Group
vwanname=svh-skytap # vWAN name
hubname=svhub # vHub name
username=azureuser # Username
password="Msft123Msft123" # Please change your password
vmsize=Standard_DS1_v2 # VM Size
firewallsku=Premium #Azure Firewall SKU Standard or Premium

#ExpressRoute specific variables
ername1="skytap-er-circuit" 
perloc1="Chicago"
providerloc1=Megaport
ername2="onprem-er-circuit"
perloc2="Dallas"
providerloc2=Megaport

# Adding script starting time and finish time
start=`date +%s`
echo "Script started at $(date)"

# Validating Circuits Provider privisionaing status:
echo Validating Circuits Provider privisionaing status...
# $ername1
if  [ $(az network express-route show -g $rg --name $ername1 --query serviceProviderProvisioningState -o tsv) == 'Provisioned' ]; then
 echo "$ername1=Provisioned"
else
 echo $(az network express-route show -g $rg --name $ername1 --query serviceProviderProvisioningState -o tsv)
 echo "Please proceeed with the ER Circuit $ername1 provisioning with your Service Provider before proceed"
fi
echo Validating Circuits Provider privisionaing status...
# $ername2
if  [ $(az network express-route show -g $rg --name $ername2 --query serviceProviderProvisioningState -o tsv) == 'Provisioned' ]; then
 echo "$ername2=Provisioned"
else
 echo $(az network express-route show -g $rg --name $ername2 --query serviceProviderProvisioningState -o tsv)
 echo "Please proceeed with the ER Circuit $ername2 provisioning with your Service Provider before proceed"
fi

# Connect vuhb1 to ErCircuit1
echo connecting vuhb1 to $ername1
peering1=$(az network express-route show -g $rg --name $ername1 --query peerings[].id -o tsv)
routetableid=$(az network vhub route-table show --name defaultRouteTable --vhub-name $hubname -g $rg --query id -o tsv)
az network express-route gateway connection create --name connection-to-$ername1 -g $rg --gateway-name $hubname-ergw --peering $peering1 --associated-route-table $routetableid  --propagated-route-tables $routetableid --labels default &>/dev/null &
sleep 5
echo Validating ER circuits connection to the Gateway
prState=''
while [[ $prState != 'Succeeded' ]];
do
    prState=$(az network express-route gateway connection show --name connection-to-$ername1 -g $rg --gateway-name $hubname-ergw --query 'provisioningState' -o tsv)
    echo "ER connection connection-to-$ername1 provisioningState="$prState
    sleep 5
done

# Connect vuhb1 to ErCircuit2
echo connecting vuhb1 to $ername2
peering1=$(az network express-route show -g $rg --name $ername2 --query peerings[].id -o tsv)
routetableid=$(az network vhub route-table show --name defaultRouteTable --vhub-name $hubname -g $rg --query id -o tsv)
az network express-route gateway connection create --name connection-to-$ername2 -g $rg --gateway-name $hubname-ergw --peering $peering1 --associated-route-table $routetableid  --propagated-route-tables $routetableid --labels default &>/dev/null &
sleep 5
echo Validating ER circuits connection to the Gateway
prState=''
while [[ $prState != 'Succeeded' ]];
do
    prState=$(az network express-route gateway connection show --name connection-to-$ername2 -g $rg --gateway-name $hubname-ergw --query 'provisioningState' -o tsv)
    echo "ER connection connection-to-$ername2 provisioningState="$prState
    sleep 5
done

# Add script ending time but hours, minutes and seconds
end=`date +%s`
runtime=$((end-start))
echo "Script finished at $(date)"
echo "Total script execution time: $(($runtime / 3600)) hours $((($runtime / 60) % 60)) minutes and $(($runtime % 60)) seconds."